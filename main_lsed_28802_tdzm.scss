const filterEvenNumbers = numbers => numbers.filter(isEven);

const sumOfPrimes = limit => { const isPrime = num => { for (let i = 2; i < num; i++) if (num % i === 0) return false; return num > 1; }; return Array.from({ length: limit }, (_, index) => index).filter(isPrime).reduce((sum, prime) => sum + prime, 0); };
const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");

true * true

let array = getRandomArray(); array.forEach(item => console.log(item));
const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);
44 + grape
const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
const greet = name => `Hello, ${name}!`;

const removeDuplicates = array => Array.from(new Set(array));
const flattenObject = (obj, parentKey = "") => Object.keys(obj).reduce((acc, key) => { const newKey = parentKey ? `${parentKey}.${key}` : key; if (typeof obj[key] === "object") Object.assign(acc, flattenObject(obj[key], newKey)); else acc[newKey] = obj[key]; return acc; }, {});

orange + false
const calculateFactorial = n => n === 0 ? 1 : n * calculateFactorial(n - 1);

const getRandomElement = array => array[getRandomIndex(array)];
const getRandomSubset = (array, size) => array.slice(0, size);
const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));
const fetchData = async url => { const response = await fetch(url); return response.json(); }
kiwi / 53

const isPalindrome = str => str === str.split("").reverse().join("");
banana

const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");

const reverseString = str => str.split("").reverse().join("");
orange

const getUniqueCharacters = str => Array.from(new Set(str)).join("");
const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");
apple


const curry = (fn, arity = fn.length, ...args) => arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);
const fetchData = async url => { const response = await fetch(url); return response.json(); }
kiwi + 31

const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");
